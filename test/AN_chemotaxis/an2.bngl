# Example of the capabilities of NFsim.  This is a BNG encoding of an
# extended Assistance Neighborhood model based on the model presented
# in Hansen, Endres, & Wingreen, PLOS Comp.Bio,4,(1) 2008.  In the
# original model, CheR/CheB are not treated explicitly because only
# one receptor cluster can be simulated at a time.  (CheR/CheB were
# originally treated as states, ie CheR bound or not bound, and binding
# and unbinding reactions were treated like unimolecular reactions
# with rates in units of per second).  In this extended model, we
# are able to simulate receptors for an entire cell (~370 clusters)
# with explicit CheR and CheB molecules.

# The original model also assumed saturated methylation and demethylation
# kinetics of receptors.  We demonstrate here that we can explicitly
# have binding and unbinding to a second active site, so that you do
# not have to assume saturated kinetics.  However, we choose arbitrarily
# fast binding rates to recover the saturated kinetics based results 
# of the original model.



begin parameters

	# CheR/CheB rates for binding and unbinding the tether.  In the original
    # study, binding rates are in units of per second (because CheR/CheB are
    # treated as states of the receptor).  These rates are not valid here, so
    # instead we use the binding rate from AgentCell for CheR. The original 
    # AN model used the same binding rate for CheR and CheB, so we do the 
    # same thing here.  The unbinding rate is unchanged from the original model.
    #         Original study, konR=konB=0.01/s
    #         AgentCell (Emonet, et. al, Bioinfo.2005 21(11):2714-2721;
    Vol 1.41e-15 #liters
 	Na 6.02e23
 	konR 2.8e6/(Na*Vol) #2.8uM
 	konB 2.8e6/(Na*Vol)
	koffR 0.1 #s^-1
	koffB 0.1 #s^-1
	
	# Methylation and demethylation catalytic rates, taken directly from
     # the original Assistance Neighborhood model
	kr 0.1
	kb 0.2
	

	# Free energy of dimers for different methylation levels, also defined in
	# in original study.
	e0 1.0
	e1 0.5
	e2 0.0
	e3 -0.3
	e4 -0.6
	e5 -0.85
	e6 -1.1
	e7 -2.0
	e8 -3.0
	
	
	#Binding constants of TAR and TSR to attractant Aspartate, as
     #defined in the original model.
	Asp_Koff_TAR  0.02 #mM
	Asp_Kon_TAR   0.5  #mM
	Asp_Koff_TSR  100  #mM
	Asp_Kon_TSR   10^6 #mM
	
	#Tar and Tsr per cluster
	TAR_COUNT 6
	TSR_COUNT 13
	
	#Initial aspartate concentration
	AspConc 0 #mM

	# Number of molecules we want to simulate.  Assuming a cell has ~14,000 
    # chemoreceptors, that gives us ~7000 receptors dimers, and 370 clusters 
    # of 19 receptor dimers.  The numbers of CheR and CheB are high, but are 
    # set to give a timescale of adaptation similar to the original model.  In 
    # a real cell, CheR and CheB will be less (on the order of ~200), but
	# the catalytic rate of methylation/demethylation will likely be faster.
    # see Li Hazelbauer, J. of Bact.(2004),Vol.186, No.12, p.3687-3694 for
    # better approximations of the number of molecules in a real cell
	ClusterCount 370
    CheRCount 500
	CheBCount 500

end parameters



begin species

	# Clusters of 19 Receptor Dimers, connected in a hexagonal lattice as in
	# the original model, through bonds t1 to t6.
	RD(m~3,r,b,active,t1,t2,t3!1,t4!4,t5!3,t6).RD(m~3,r,b,active,t1,t2,t3!2,t4!6,t5!5,t6!1).RD(m~3,r,b,active,t1,t2,t3,t4!8,t5!7,t6!2).RD(m~3,r,b,active,t1,t2!3,t3!9,t4!13,t5!12,t6).RD(m~3,r,b,active,t1!4,t2!5,t3!10,t4!15,t5!14,t6!9).RD(m~3,r,b,active,t1!6,t2!7,t3!11,t4!17,t5!16,t6!10).RD(m~3,r,b,active,t1!8,t2,t3,t4!19,t5!18,t6!11).RD(m~3,r,b,active,t1,t2!12,t3!20,t4!24,t5,t6).RD(m~3,r,b,active,t1!13,t2!14,t3!21,t4!26,t5!25,t6!20).RD(m~3,r,b,active,t1!15,t2!16,t3!22,t4!28,t5!27,t6!21).RD(m~3,r,b,active,t1!17,t2!18,t3!23,t4!30,t5!29,t6!22).RD(m~3,r,b,active,t1!19,t2,t3,t4,t5!31,t6!23).RD(m~3,r,b,active,t1!24,t2!25,t3!32,t4!35,t5,t6).RD(m~3,r,b,active,t1!26,t2!27,t3!33,t4!37,t5!36,t6!32).RD(m~3,r,b,active,t1!28,t2!29,t3!34,t4!39,t5!38,t6!33).RD(m~3,r,b,active,t1!30,t2!31,t3,t4,t5!40,t6!34).RD(m~3,r,b,active,t1!35,t2!36,t3!41,t4,t5,t6).RD(m~3,r,b,active,t1!37,t2!38,t3!42,t4,t5,t6!41).RD(m~3,r,b,active,t1!39,t2!40,t3,t4,t5,t6!42) ClusterCount
 
	CheR(tether,active) CheRCount
	CheB(tether,active) CheBCount

end species




begin observables

	# Observables to keep track of the methylation level
	# of individual receptors and receptors in the cluster
	Molecules R0 RD(m~0)
	Molecules R1 RD(m~1)
	Molecules R2 RD(m~2)
	Molecules R3 RD(m~3)
	Molecules R4 RD(m~4)
	Molecules R5 RD(m~5)
	Molecules R6 RD(m~6)
	Molecules R7 RD(m~7)
	Molecules R8 RD(m~8)

	# Other observables that track the number of R/B bound can
	# be defined here
	Molecules RD_R RD(r!1).CheR(tether!1)
	Molecules RD_B RD(b!1).CheB(tether!1)

end observables



begin functions

	# Keeps track of the methylation level for a single dimer, so
	# that the rates of methylation and demethylation can vary according
	# to the number of available methylation sites
	MethLevel(x) = 1*R1(x)+2*R2(x)+3*R3(x)+4*R4(x)+5*R5(x)+6*R6(x)+7*R7(x)+8*R8(x)

	# activity function, which is the probability for the kinase to be on, 
	# defined here as in the original study
	pOn(x) = 1/(1+(exp(e0*R0(x)+e1*R1(x)+e2*R2(x)+e3*R3(x)+e4*R4(x)+e5*R5(x)+e6*R6(x)+e7*R7(x)+e8*R8(x))*((1.0+(AspConc/Asp_Koff_TAR))/(1.0+(AspConc/Asp_Kon_TAR)))^TAR_COUNT*((1.0+(AspConc/Asp_Koff_TSR)) / (1.0+(AspConc/Asp_Kon_TSR)))^TSR_COUNT))

	#simplified activity function, for reference:
	#pOn = 1.0 / (1.0 + (exp(FreeEnergyOffsetSum) * TAR_LOG_TERM * TSR_LOG_TERM));

end functions




begin reaction rules
	
	##  R/B binding and unbinding to a receptor tether, only one R or B is
	##  allowed to bind per dimer, the active site must also be free
	Tether Binding CheR :\
	RD(r,b) + CheR(tether,active) -> CheR(tether!1,active).RD(r!1,b) konR
	RD(r,b) + CheB(tether,active) -> CheB(tether!1,active).RD(r,b!1) konB
	
	## Unbinding from the tether, does not depend on active site
	CheR(tether!1).RD(r!1) -> CheR(tether) + RD(r) koffR
	CheB(tether!1).RD(b!1) -> CheB(tether) + RD(b) koffB
	
	## If R or B unbinds a tether, it rapidly falls off the receptor without
	## methylating or demethylating, which fits with the original model
	CheR(tether,active!1).RD(active!1) -> CheR(tether,active) + RD(active)  1000
	CheB(tether,active!1).RD(active!1) -> CheB(tether,active) + RD(active)  1000 
	
	
	## R/B binding to active site.  Assuming saturated kinetics means 
     ## that this happens very fast, but it will still depend on the number 
     ## of sites available so that the methylation distribution is correct.
	## Binding does not depend on activity (according to the original study), 
     ## only the rate limiting catalytic step does.
	RD%y(r!1,active).CheR(tether!1,active) -> RD%y(r!1,active!2).CheR(tether!1,active!2) 1000*(8-MethLevel(y))
	RD%y(b!1,active).CheB(tether!1,active) -> RD%y(b!1,active!2).CheB(tether!1,active!2) 1000*(MethLevel(y))
	
	
	## Methylation and demethylation is activity dependent, and requires an
     ## R/B bound to the catalytic active site of the receptor dimer.
	%x::RD(m~?,active!1).CheR(active!1) -> %x::RD(m~PLUS,active) + CheR(active) kr*(1-pOn(x))
	%x::RD(m~?,active!1).CheB(active!1) -> %x::RD(m~MINUS,active) + CheB(active) kb*(pOn(x))
	
	
	## Assistance Neighborhood binding rules that allow an R or B to bind
     ## the active site of a nearby receptor.  Again, the rates are fast
     ## so that we recover the original results that assumed saturated kinetics
	RD%y(active,t1!1).RD(r!2,t4!1).CheR(tether!2,active) -> RD%y(active!3,t1!1).RD(r!2,t4!1).CheR(tether!2,active!3) 1000*(8-MethLevel(y))
	RD%y(active,t2!1).RD(r!2,t5!1).CheR(tether!2,active) -> RD%y(active!3,t2!1).RD(r!2,t5!1).CheR(tether!2,active!3) 1000*(8-MethLevel(y))
	RD%y(active,t3!1).RD(r!2,t6!1).CheR(tether!2,active) -> RD%y(active!3,t3!1).RD(r!2,t6!1).CheR(tether!2,active!3) 1000*(8-MethLevel(y))
	RD%y(active,t4!1).RD(r!2,t1!1).CheR(tether!2,active) -> RD%y(active!3,t4!1).RD(r!2,t1!1).CheR(tether!2,active!3) 1000*(8-MethLevel(y))
	RD%y(active,t5!1).RD(r!2,t2!1).CheR(tether!2,active) -> RD%y(active!3,t5!1).RD(r!2,t2!1).CheR(tether!2,active!3) 1000*(8-MethLevel(y))
	RD%y(active,t6!1).RD(r!2,t3!1).CheR(tether!2,active) -> RD%y(active!3,t6!1).RD(r!2,t3!1).CheR(tether!2,active!3) 1000*(8-MethLevel(y))
	
	RD%y(active,t1!1).RD(b!2,t4!1).CheB(tether!2,active) -> RD%y(active!3,t1!1).RD(b!2,t4!1).CheB(tether!2,active!3) 1000*(MethLevel(y))
	RD%y(active,t2!1).RD(b!2,t5!1).CheB(tether!2,active) -> RD%y(active!3,t2!1).RD(b!2,t5!1).CheB(tether!2,active!3) 1000*(MethLevel(y))
	RD%y(active,t3!1).RD(b!2,t6!1).CheB(tether!2,active) -> RD%y(active!3,t3!1).RD(b!2,t6!1).CheB(tether!2,active!3) 1000*(MethLevel(y))
	RD%y(active,t4!1).RD(b!2,t1!1).CheB(tether!2,active) -> RD%y(active!3,t4!1).RD(b!2,t1!1).CheB(tether!2,active!3) 1000*(MethLevel(y))
	RD%y(active,t5!1).RD(b!2,t2!1).CheB(tether!2,active) -> RD%y(active!3,t5!1).RD(b!2,t2!1).CheB(tether!2,active!3) 1000*(MethLevel(y))
	RD%y(active,t6!1).RD(b!2,t3!1).CheB(tether!2,active) -> RD%y(active!3,t6!1).RD(b!2,t3!1).CheB(tether!2,active!3) 1000*(MethLevel(y))
	

end reaction rules






writeXML();
